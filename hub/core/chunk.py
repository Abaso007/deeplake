from typing import List, Tuple
import numpy as np
from io import BytesIO


class Chunk:
    """A Chunk should only be provided data to store in bytes form, alongside the meta information (like shape/num_samples). The
    byte ranges are to be generated by this chunk, and it can also spawn new chunks as needed."""

    def __init__(self, max_data_bytes: int, buffer: bytes = None):
        if buffer:
            self.frombuffer(buffer)

        self.index_shape_encoder = None
        self.index_byte_range_encoder = None

        self.data = bytearray()

    def tobytes(self) -> bytes:
        out = BytesIO()
        np.savez(
            out,
            index_shape_encoder=self.index_shape_encoder,
            index_byte_range_encoder=self.index_byte_range_encoder,
            data=self.data,
        )
        out.seek(0)
        return out.read()

    def frombuffer(self, buffer: bytes):
        pass

    def extend(
        self, buffer: bytes, num_samples: int, sample_shape: Tuple[int]
    ) -> Tuple:

        return tuple()

    def __getitem__(self, sample_index: int):
        return None
